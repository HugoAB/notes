{"version":3,"sources":["services/notes.js","Note.js","Notification.js","Footer.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","initialNotes","class","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","console","log","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAEMA,EAAU,kCAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCH9BK,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCMjCK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKJ,UAAU,QAAf,SACKI,KCQEC,EAfA,WAOX,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GCkFOC,MAxFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAyBMC,EAAcJ,EAChBJ,EACAA,EAAMS,QAAO,SAAAzB,GAAI,OAAuB,IAAnBA,EAAKG,aA8B9B,OARAuB,qBAAU,WACRC,IAEGnC,MAAK,SAAAoC,GACJX,EAASW,QAEZ,IAGD,gCACE,uCACA,cAAC,EAAD,CAAcpB,QAASc,EAAcO,MAAOP,IAC5C,8BACE,yBAAQhB,QAAS,kBAAMe,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGI,EAAYM,KAAI,SAAA9B,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAzCC,SAACJ,GAC1B,IAAMG,EAAOgB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEnC,KAAOA,KAChCoC,EAAW,2BAAQjC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDwB,EACU9B,EAAIoC,GACXzC,MAAK,SAAA0C,GACJjB,EAASD,EAAMc,KAAI,SAAA9B,GAAI,OAAIA,EAAKH,KAAOA,EAAKG,EAAOkC,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,GAAD,OAAIvB,EAAKK,QAAT,qCACfgC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMS,QAAO,SAAAO,GAAC,OAAIA,EAAEnC,KAAOA,SA2BVyC,CAAmBtC,EAAKH,MAF3CG,EAAKH,SAMhB,uBAAM0C,SAzEM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjBrC,QAASa,EACTyB,MAAM,IAAIC,MAAOC,cACjB1C,UAAW2C,KAAKC,SAAW,GAC3BlD,GAAImB,EAAMgC,OAAS,GAGrBrB,EACUe,GACPlD,MAAK,SAAA0C,GACJjB,EAASD,EAAMiC,OAAOf,IACtBf,EAAW,QA4Db,UACE,uBAAO+B,MAAOhC,EAASiC,SAxDJ,SAACX,GACxBY,QAAQC,IAAIb,EAAEc,OAAOJ,OACrB/B,EAAWqB,EAAEc,OAAOJ,UAuDhB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCpFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7940dc14.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = 'http://localhost:3001/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default {\n    getAll,\n    create,\n    update\n}","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important';\n\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    );\n}\n\nexport default Note;","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    \n    return (\n        <div className='error'>\n            {message}\n        </div>\n    );\n}\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n      </div>\n    )\n}\n\nexport default Footer;","import React,{ useState, useEffect } from 'react';\nimport noteService from './services/notes';\nimport Note from './Note';\nimport Notification from './Notification';\nimport Footer from './Footer';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n      });\n    \n  }\n\n  const handleNoteChange = (e) => {\n    console.log(e.target.value);\n    setNewNote(e.target.value);\n  }\n  \n  const notesToShow = showAll \n    ? notes\n    : notes.filter(note => note.important === true)\n\n\n    const toggleImportanceOf = (id) => {\n      const note = notes.find(n => n.id === id);\n      const changedNote = { ...note, important: !note.important };\n\n      noteService\n        .update(id, changedNote)\n        .then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n          setErrorMessage(`${note.content} was already removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000);\n          setNotes(notes.filter(n => n.id !== id));\n        })\n\n    }\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      })\n  }, []);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} class={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>   \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}